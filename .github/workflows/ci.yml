name: CI
on:
  pull_request:
  push:
    branches: [ main ]
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: pipx install poetry==1.8.3
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install deps
        run: poetry install
      - name: Pre-commit
        run: poetry run pre-commit run --all-files
      - name: Lint (ruff) + Format check
        run: poetry run ruff check . && poetry run ruff format --check .
      - name: Typecheck (mypy)
        run: poetry run mypy app
      - name: Security (bandit + pip-audit)
        run: |
          poetry run bandit -r app -f json -o artifacts/bandit.json || true
          poetry run pip-audit -r pyproject.toml -f json -o artifacts/pip-audit.json || true
      - name: Test (pytest + coverage)
        run: poetry run pytest
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: artifacts
      - name: Build Docker
        run: docker build -t kilocode/app:ci . | tee artifacts/docker_build.log
      - name: Trivy scan (optional)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'kilocode/app:ci'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
      - name: SBOM (syft) optional
        run: |
          if command -v syft >/dev/null; then syft packages dir:. -o spdx-json > artifacts/sbom.spdx.json; fi
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifacts
